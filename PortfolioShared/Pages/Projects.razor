@page "/projects"
@inject NavigationManager navigationManager


<style>
    .without-shadow {
        box-shadow: none !important;
    }

    .no-scroll {
        scrollbar-width: thin;
        -ms-overflow-style: none;
        scrollbar-width: none;
    }

        .no-scroll::-webkit-scrollbar {
            width: 0 !important;
            height: 0 !important;
            display: none;
        }
</style>
@* <LastWorks/> *@
<MudGrid Justify="Justify.Center">
    <MudItem xs="12" Class="d-flex justify-center">
        <Bar />
    </MudItem>
    <MudItem xs="12">
        <MudText Typo="Typo.h2" Align="Align.Center">my projects</MudText>
    </MudItem>
    <MudItem xs="12" sm="10">
        <MudText Typo="Typo.body1" Align="Align.Center">Discover a showcase of my diverse projects, each embodying my commitment to innovation and skillful execution. From web development to mobile applications, these creations reflect my passion for turning ideas into tangible solutions.</MudText>
        <br />
    </MudItem>
    <MudItem xs="12">
        <MudGrid Justify="Justify.Center">
            @if (loadingStatus == LoadingStatus.LoadingSuceeded && _projects != null)
            {
                @foreach (var project in _projects.Projects)
                {
                    <MudItem xs="12" sm="6">
                        <MudPaper Class="pa-4">
                            <MudGrid>
                                <MudItem xs="12" sm="4" Class="d-flex justify-center">
                                    <MudImage Src="@($"_content/PortfolioShared/images/techs/{project.Image}.png")" Width="80" />
                                </MudItem>
                                <MudItem xs="12" sm="8" Class="d-flex justify-center align-center gap-1">
                                    <MudIcon Icon="@Icons.Material.Filled.Book" Size="Size.Medium" />
                                    <MudLink Href="@project.Link" Target="_blank" Class="custom-link">
                                        <MudText Typo="Typo.subtitle1" Color="Color.Primary">@project.Name</MudText>
                                    </MudLink>
                                </MudItem>
                                <MudItem xs="12">
                                    <MudText Typo="Typo.body1">@project.Description</MudText>
                                </MudItem>
                                <MudItem xs="12">
                                    <MudStack Row="true" Class="overflow-x-scroll no-scroll">
                                        @foreach (var tech in project.Techs)
                                        {
                                            <MudText Typo="Typo.body2" Align="Align.Center" Color="Color.Success" Class="pa-3 without-shadow">@tech</MudText>
                                        }
                                    </MudStack>
                                </MudItem>
                            </MudGrid>
                        </MudPaper>
                    </MudItem>
                }
            }
            else if (loadingStatus == LoadingStatus.LoadingInProgress)
            {
                <MudItem xs="12" Class="d-flex justify-center">
                    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                </MudItem>
            }
            else
            {
                <MudItem xs="12" Class="d-flex justify-center">
                    <MudText Typo="Typo.h6">
                        Network connection error. <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="TryAgain">try again</MudButton>
                    </MudText>
                </MudItem>
            }

        </MudGrid>
    </MudItem>
</MudGrid>

@code {
    ProjectsVM _projects;
    LoadingStatus loadingStatus = LoadingStatus.LoadingInProgress;

    protected override async Task OnInitializedAsync()
    {

        await fetchData();

    }
    private async Task TryAgain()
    {
        await fetchData();
    }
    private async Task fetchData()
    {
        try
        {
            loadingStatus = LoadingStatus.LoadingInProgress;
            var jsonContent = await httpClient.GetStringAsync("https://raw.githubusercontent.com/Ahmed2000Github/Data/master/projectsdata.json");
            _projects = System.Text.Json.JsonSerializer.Deserialize<ProjectsVM>(jsonContent, new JsonSerializerOptions { PropertyNameCaseInsensitive = true })!;
            loadingStatus = LoadingStatus.LoadingSuceeded;
        }
        catch (Exception)
        {
            loadingStatus = LoadingStatus.LoadingFailed;

        }

    }
}
